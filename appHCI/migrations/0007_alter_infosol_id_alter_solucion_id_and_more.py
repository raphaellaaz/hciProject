# Generated by Django 4.2.3 on 2023-07-28 00:30

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('appHCI', '0006_u_negocios_departamento_u_negocios_email_negocios_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='infosol',
            name='id',
            field=models.UUIDField(default=uuid.UUID('06dcfa18-aca2-4204-9c2c-0782d3a39991'), editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='solucion',
            name='id',
            field=models.UUIDField(default=uuid.UUID('b905905c-580a-4e93-9e4c-e3ac897ecc1d'), editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='suscritos',
            name='id',
            field=models.UUIDField(default=uuid.UUID('beaa1cc8-fc05-4be6-a879-addc54e2a500'), editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='trabaja',
            name='id',
            field=models.UUIDField(default=uuid.UUID('779ee961-ac95-4fbc-b398-667f97fe7c9d'), editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='typeuser',
            name='id',
            field=models.UUIDField(default=uuid.UUID('3fbe02fc-e0ae-4718-b154-466a8ffdbf5d'), editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='u_negocios',
            name='id',
            field=models.UUIDField(default=uuid.UUID('c57fca0a-06b6-4f3b-88d5-dda00eb9168c'), editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='userzt',
            name='id',
            field=models.UUIDField(default=uuid.UUID('2aae16fe-aa76-4714-8919-4599c2cb25bd'), editable=False, primary_key=True, serialize=False),
        ),
        migrations.CreateModel(
            name='AccessUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, related_name='access_users', to='auth.group', verbose_name='groups')),
                ('id_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='User_id', to='appHCI.userzt')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='access_users', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
